name: API CI

on:
  push:
    branches:
      - main
      - develop
      - tests
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/api-ci.yml'
  pull_request:
    branches:
      - main
      - develop
      - tests
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/api-ci.yml'

defaults:
  run:
    working-directory: .

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-integration-tests:
    runs-on: ubuntu-latest
    env:
      ACCESS_SECRET: test-secret
      ACCESS_EXPIRES_IN: 60m
      ROUNDS_HASH_PASSWORD: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - name: install dependencies
        run: npm ci
      - name: run unit and integration tests
        run: npm run test

  e2e:
    runs-on: ubuntu-latest
    env:
      # DB configuration
      MYSQL_HOST: localhost
      MYSQL_PORT: 3306
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
      MYSQL_NAME: social_network_e2e
      # App configuration
      ROUNDS_HASH_PASSWORD: 10
      ACCESS_SECRET: access-test
      ACCESS_EXPIRES_IN: 1h
      REFRESH_SECRET: refresh-test
      REFRESH_EXPIRES_IN: 1d

    services:
      mysql-e2e:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_NAME: social_network_e2e
          MYSQL_USER: user
          MYSQL_PASSWORD: userpassword
          MYSQL_ROOT_PASSWORD: rootpassword
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Init database
        run: npm run migrations:run:test

      - name: Run E2E tests
        run: npm run test:e2e
